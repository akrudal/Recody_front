//
//  ReviewViewController.swift
//  Recody
//
//  Created by 마경미 on 23.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PreReviewDisplayLogic: class {
    func displaySomething(viewModel: PreReview.API.ViewModel)
}

class PreReviewViewController: UIViewController, PreReviewDisplayLogic {
    var interactor: PreReviewBusinessLogic?
    var router: (NSObjectProtocol & PreReviewRoutingLogic & PreReviewDataPassing)?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = PreReviewInteractor()
        let presenter = PreReviewPresenter()
        let router = PreReviewRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        doSomething()
    }

    // MARK: Do something
    @IBOutlet weak var ratingStackView: UIStackView!
    @IBOutlet weak var ratingSlider: UISlider!
    @IBOutlet weak var rateScore: UILabel!
    @IBOutlet weak var rateExpression: UILabel!
    @IBOutlet weak var viewHeight: NSLayoutConstraint!
    
    var preReviews: [PreReview.PreReview] = [
        PreReview.PreReview(recordCount: 1, date: Date(), note: "hi1"),
        PreReview.PreReview(recordCount: 2, date: Date(), note: "hi2"),
        PreReview.PreReview(recordCount: 3, date: Date(), note: "hi3"),
        PreReview.PreReview(recordCount: 4, date: Date(), note: "hi4")
    ]

    @IBAction func changeSlider(_ sender: UISlider) {
        var floatValue: Float {
            if ratingSlider.value - Float(Int(ratingSlider.value)) >= 0.5 {
            return Float(Int(ratingSlider.value)) + 0.5
            } else {
                return Float(Int(ratingSlider.value))
            }
        }

        for index in 1...6 {
            if let starImage = view.viewWithTag(index) as? UIImageView {
                if Float(index) <= floatValue {
                    starImage.image = UIImage(named: "star.fill")
                } else if (Float(index) - floatValue) <= 0.5 {
                    starImage.image = UIImage(named: "star.half.fill")
                } else {
                    starImage.image = UIImage(named: "star")
                }
            }
        }
        rateScore.text = String(floatValue)
    }

    func doSomething() {
        let request = PreReview.API.Request()
        interactor?.doSomething(request: request)
    }

    func displaySomething(viewModel: PreReview.API.ViewModel) {
        // nameTextField.text = viewModel.name
    }
}
