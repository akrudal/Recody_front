//
//  EditCategoryViewController.swift
//  Recody
//
//  Created by 마경미 on 2022/09/05.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EditCategoryDisplayLogic: AnyObject {
    func displaySomething(viewModel: EditCategory.Something.ViewModel)
}

class EditCategoryViewController: UIViewController, EditCategoryDisplayLogic {
    var interactor: EditCategoryBusinessLogic?
    var router: (NSObjectProtocol & EditCategoryRoutingLogic & EditCategoryDataPassing)?

    // MARK: Object lifecycle
    let myCategoryList: [Category] = [
        Category(name: "전체", image: "book"),
        Category(name: "책", image: "book"),
        Category(name: "영화", image: "book"),
        Category(name: "드라마", image: "book"),
        Category(name: "음악", image: "book"),
        Category(name: "공연", image: "book")
    ]

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = EditCategoryInteractor()
        let presenter = EditCategoryPresenter()
        let router = EditCategoryRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        doSomething()
    }

    // MARK: Do something

    func doSomething() {
        let request = EditCategory.Something.Request()
        interactor?.doSomething(request: request)
    }

    func addLongpressEvent(view: UIImageView) {
        let longPressRecognizer = UILongPressGestureRecognizer(target: self, action: #selector(longPressed))
        longPressRecognizer.minimumPressDuration = 0.5
        view.addGestureRecognizer(longPressRecognizer)
        print("hi")
    }

    @objc func longPressed(sender: UILongPressGestureRecognizer) {
        if sender.state == UIGestureRecognizer.State.ended {
            router?.routeToEditGenre(segue: nil)
        } else {
            _ = Timer.scheduledTimer(withTimeInterval: 0.5, repeats: true) { timer in
                sender.state = .ended
                timer.invalidate()
            }
        }
    }

    func displaySomething(viewModel: EditCategory.Something.ViewModel) {
        // nameTextField.text = viewModel.name
    }
}
