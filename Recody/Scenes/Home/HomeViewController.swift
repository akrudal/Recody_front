//
//  HomeViewController.swift
//  Recody
//
//  Created by 마경미 on 2022/08/04.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class HomeViewController: CommonVC {
    var viewModel = HomeViewModel()
    
    let works: [Work] = [
        Work(id: "0", name: "Attention", image: "attention"),
        Work(id: "1", name: "1987", image: "1987"),
        Work(id: "2", name: "CallMeByYourName", image: "callMeByYourName"),
        Work(id: "3", name: "her", image: "her"),
        Work(id: "4", name: "Pink Venom", image: "pinkVenom"),
        Work(id: "5", name: "마더", image: "mother"),
        Work(id: "6", name: "블랙 팬서", image: "blackPanther"),
        Work(id: "7", name: "스파이더맨", image: "spiderman"),
        Work(id: "8", name: "After Like", image: "afterLike")
    ]

    let categories: [Category] = [
        Category(name: "전체", image: "all"),
        Category(name: "책", image: "book"),
        Category(name: "영화", image: "movie"),
        Category(name: "드라마", image: "drama"),
        Category(name: "음악", image: "music")
    ]

    @IBOutlet weak var categoryStackView: UIStackView!
    @IBOutlet var customCategories: [CustomCategory]!
    @IBOutlet weak var workListcollectionView: UICollectionView! {
        didSet {
            workListcollectionView.collectionViewLayout = createLayout()
        }
    }
    @IBOutlet weak var headerStackView: UIStackView!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setCategoryStackView()
    }

    func setCategoryStackView() {
        var index = 0
        for value in customCategories {
            value.setData(with: categories[index])
            value.tag = index+100
            value.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(clickEvent)))
            index += 1
        }
    }
    
    @objc func clickEvent(_ sender: UITapGestureRecognizer){
        print(sender)
        if let tag = sender.view?.tag {
            self.router?.present(RoutingLogic.Navigation.workList, nil,.overCurrentContext)
//            self.router?.pushViewController(RoutingLogic.Navigation.workList, dataStore: nil)
        }
    }

    func createLayout() -> UICollectionViewCompositionalLayout {
        let size = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1), heightDimension: .fractionalHeight(1))
        let item = NSCollectionLayoutItem(layoutSize: size)
        let group = NSCollectionLayoutGroup.horizontal(layoutSize: .init(widthDimension: .absolute(116), heightDimension: .absolute(170)), subitems: [item])
        let section = NSCollectionLayoutSection(group: group)
        section.orthogonalScrollingBehavior = .continuous
        section.boundarySupplementaryItems = [
            .init(layoutSize: .init(widthDimension: .fractionalWidth(1), heightDimension: .absolute(26)), elementKind: UICollectionView.elementKindSectionHeader, alignment: .topLeading)
        ]
        section.contentInsets.top = 16
        let layout = UICollectionViewCompositionalLayout(section: section)
        return layout
    }
    
    // UseCase 정리
    // 1. 알림
    // 2. 기록 중 넘어가기
    // 3. 카테고리 선택
    // 4. 작품 카테고리 선택
    // 5. 작품 선택
    enum UseCase: Int, OrderType {
        case moveAll = 100
        case moveBook = 101
        case moveMovie = 102
        case moveDrama = 103
        case moveMusic = 104
        case setting = 105
        case notification = 106
        case moveReviewing = 107
        case workCategory = 108
        case moveWork = 109
        var number: Int {
            return self.rawValue
        }
    }
    
    override func display(orderNumber: Int) {
        guard let useCase = UseCase(rawValue: orderNumber) else { return }
//        switch useCase {
//        case .setting:
//            self
//        }
    }
    
    override func displayErorr(orderNumber: Int, msg: String?) {
        guard let useCase = UseCase(rawValue: orderNumber) else { return }
        switch useCase {
        default:
            self.presenter?.alertService.showToast("\(useCase)")
        }
    }
    
    override func displaySuccess(orderNumber: Int, dataStore: DataStoreType?) {
        guard let useCase = UseCase(rawValue: orderNumber) else { return }
        switch useCase {

        default:
            self.presenter?.alertService.showToast("\(useCase)")
        }
    }
    
    // clickevent 정의
    
    // setup
    
    // viewdidload
}
