//
//  HomeViewController.swift
//  Recody
//
//  Created by 마경미 on 2022/08/04.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class HomeViewController: UIViewController {
    var viewModel = HomeViewModel()
    let picker = UIImagePickerController()
    let works: [Work] = [
        Work(id: "0", name: "Attention", image: "attention"),
        Work(id: "1", name: "1987", image: "1987"),
        Work(id: "2", name: "CallMeByYourName", image: "callMeByYourName"),
        Work(id: "3", name: "her", image: "her"),
        Work(id: "4", name: "Pink Venom", image: "pinkVenom"),
        Work(id: "5", name: "마더", image: "mother"),
        Work(id: "6", name: "블랙 팬서", image: "blackPanther"),
        Work(id: "7", name: "스파이더맨", image: "spiderman"),
        Work(id: "8", name: "After Like", image: "afterLike")
    ]

    @IBOutlet weak var workScrollView: UIScrollView!
    @IBOutlet weak var workStackView: UIStackView!
    @IBOutlet weak var notificationButton: UIButton!
    @IBOutlet weak var galleryImage: UIImageView!

    override func viewDidLoad() {
        super.viewDidLoad()
        setUp()
        setWorkView()
    }
    static func getInstanse() -> HomeViewController {
        guard let vc =  UIStoryboard(name: "Home", bundle: nil).instantiateViewController(withIdentifier: "home") as? HomeViewController
        else {
            fatalError()
        }
        return vc
    }
    func setUp() {
        picker.delegate = self
        self.galleryImage.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(clickEvent)))
        self.notificationButton.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(clickEvent)))
    }
    
    func setWorkView() {
        for work in works {
            let view = WorkView()
            view.setView(work: work)
            view.tag = 109
            view.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(clickEvent(_:))))
            workStackView.addArrangedSubview(view)
        }
    }

    @objc func clickEvent(_ sender: UITapGestureRecognizer) {
        if let tag = sender.view?.tag {
            guard let useCase = UseCase(rawValue: tag) else { return }
            switch useCase {
            case .setting:
                ServiceProvider.shaerd.apiService.send(.getUserInfomation)
                ServiceProvider.shaerd.apiService.send(.getMyRecentContinuingRecord)
                ServiceProvider.shaerd.apiService.send(.getMovies)
            case .pushWorkDetailInfo:
                self.navigationController?.pushViewController(WorkDetailInfoViewController.getInstanse(), animated: true)
            case .pushNotification:
                self.navigationController?.pushViewController(NotificationViewController.getInstanse(), animated: true)
            case .gallery:
                let alert =  UIAlertController(title: "갤러리", message: "사진을 골라주세요.", preferredStyle: .actionSheet)
                let library =  UIAlertAction(title: "사진앨범", style: .default) { (action) in self.openLibrary()
                }
                let camera =  UIAlertAction(title: "카메라", style: .default) { (action) in
                self.openCamera()
                }
        
                let cancel = UIAlertAction(title: "취소", style: .cancel, handler: nil)

                alert.addAction(library)
                alert.addAction(camera)
                alert.addAction(cancel)
                present(alert, animated: true, completion: nil)
            default:
                break
            }
        }
    }
    
    func openLibrary() {
      picker.sourceType = .photoLibrary
      present(picker, animated: false, completion: nil)
    }

    func openCamera() {
      picker.sourceType = .camera
      present(picker, animated: false, completion: nil)
    }

    enum UseCase: Int {
        case setting = 105
        case notification = 106
        case moveReviewing = 107
        case workCategory = 108
        case pushWorkDetailInfo = 109
        case pushNotification = 110
        case gallery = 111
        var number: Int {
            return self.rawValue
        }
    }
}

extension HomeViewController: UIImagePickerControllerDelegate,  UINavigationControllerDelegate {
    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
        if let image = info[UIImagePickerController.InfoKey.originalImage] as? UIImage{
            galleryImage.image = image
        }
        dismiss(animated: true, completion: nil)
        
    }
}
